------------------------------------------------------------------------------
--                                                                          --
--                     Ada User Repository Annex (AURA)                     --
--                ANNEXI-STRAYLINE Reference Implementation                 --
--                                                                          --
--                                 Core                                     --
--                                                                          --
-- ------------------------------------------------------------------------ --
--                                                                          --
--  Copyright (C) 2020-2023, ANNEXI-STRAYLINE Trans-Human Ltd.              --
--  All rights reserved.                                                    --
--                                                                          --
--  Original Contributors:                                                  --
--  * Richard Wai (ANNEXI-STRAYLINE)                                        --
--                                                                          --
--  Redistribution and use in source and binary forms, with or without      --
--  modification, are permitted provided that the following conditions are  --
--  met:                                                                    --
--                                                                          --
--      * Redistributions of source code must retain the above copyright    --
--        notice, this list of conditions and the following disclaimer.     --
--                                                                          --
--      * Redistributions in binary form must reproduce the above copyright --
--        notice, this list of conditions and the following disclaimer in   --
--        the documentation and/or other materials provided with the        --
--        distribution.                                                     --
--                                                                          --
--      * Neither the name of the copyright holder nor the names of its     --
--        contributors may be used to endorse or promote products derived   --
--        from this software without specific prior written permission.     --
--                                                                          --
--  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS     --
--  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT       --
--  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A --
--  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT      --
--  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,   --
--  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT        --
--  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,   --
--  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY   --
--  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT     --
--  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE   --
--  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    --
--                                                                          --
------------------------------------------------------------------------------

with Registrar.Queries;
with Registrar.Library_Units;

procedure Registrar.Registration.Unchecked_Deregister_Unit 
  (Unit: in out Registrar.Library_Units.Library_Unit)
with Pre => Registrar.Queries.Unit_Entered (Unit.Name);

-- Unchecked_Deregister_Unit removes a unit from the All_Library_Units set. It
-- also deallocates any Spec, Body or Subunit files, which is possibly unsafe
-- if any copies of the unit record exist outside of the All_Library_Units set.
--
-- All associated source files are destroyed. This is done after checking-out
-- the read stream. This implies potential for a dead-lock if used
-- inappropriately.
--
-- Unchecked_Deregister_Unit does not process any children of the unit, or 
-- dependencies.
--
-- Unchecked_Deregister_Unit preserves the key of the actual parameter, and 
-- may be used from within Library_Units.Library_Unit_Seys_Keyed_Operations
--   .Update_Element_Preserving_Key
--
--
-- Currently this procedure is used only by:
--
-- * The Checkout subsystem to cancel any entered configuration units for
--   subsystems that are checked-out from a "System" repository.
--
-- * Registrar.Registration.Exclude_Manifests, to remove all
--   Configuration Manifests after checkout
--
-- * Depreciation_Handlers.AURA_Subdirectory.Process_Changes, to remove all
--   pre-registered members of the AURA subsystem incorrectly placed in the
--   project root directory
--
-- Any other uses shall be documented here.
