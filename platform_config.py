#------------------------------------------------------------------------------
#--                                                                          --
#--                           platform_config.py                             --
#--                                                                          --
#--                    AURA Platform Autoconfiguration                       --
#--                                                                          --
#-- ------------------------------------------------------------------------ --
#--                                                                          --
#--  Copyright (C) 2020, Ensi Martini                                        --
#--  Copyright (C) 2020, ANNEXI-STRAYLINE Trans-Human Ltd.                   --
#--  All rights reserved.                                                    --
#--                                                                          --
#--  Redistribution and use in source and binary forms, with or without      --
#--  modification, are permitted provided that the following conditions are  --
#--  met:                                                                    --
#--      * Redistributions of source code must retain the above copyright    --
#--        notice, this list of conditions and the following disclaimer.     --
#--                                                                          --
#--      * Redistributions in binary form must reproduce the above copyright --
#--        notice, this list of conditions and the following disclaimer in   --
#--        the documentation and/or other materials provided with the        --
#--        distribution.                                                     --
#--                                                                          --
#--      * Neither the name of ANNEXI-STRAYLINE nor the names of its         --
#--        contributors may be used to endorse or promote products derived   --
#--        from this software without specific prior written permission.     --
#--                                                                          --
#--  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS     --
#--  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT       --
#--  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A --
#--  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL ANNEXI-STRAYLINE   --
#--  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR  --
#--  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF    --
#--  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR         --
#--  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,   --
#--  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR --
#--  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF  --
#--  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                              --
#--                                                                          --
#------------------------------------------------------------------------------

import platform, os

# This must be supported on at least Ubuntu 20.04 and FreeBSD 12.0

platform_info_ads = \
'''-- This package is automatically generated

package Platform_Info with Pure is
   
   -- AURA Package
   
   Platform_Family      : constant String := "{}";
   Platform_Flavor      : constant String := "{}";
   Platform_Version     : constant String := "{}";
   Platform_Architecture: constant String := "{}";
   
   -- AURA CLI Configuration

   Toolchain_Brand      : constant String := "{}";
   Toolchain_Prefix     : constant String := "{}";
   
end Platform_Info;'''

platform_info_h = \
'''/* This file is automatically generated */

#define __AURA_PLATFORM_FAMILY_{}
#define __AURA_PLATFORM_FLAVOR_{}
#define __AURA_PLATFORM_VERSION "{}"
#define __AURA_PLATFORM_ARCH_{}'''

family_dict = {'unix'  : 'unix',
               'posix' : 'unix'}

flavor_dict = {'linux'   : 'linux',
               'freebsd' : 'freebsd',
               'as-bsd'  : 'freebsd',
               'darwin'  : 'darwin'}

architecture_dict = {'x86_64' : 'x86_64',
                     'amd64'  : 'x86_64',
                     'x86'    : 'x86',
                     'i386'   : 'x86',
                     'i486'   : 'x86',
                     'i586'   : 'x86',
                     'i686'   : 'x86',
                     'i786'   : 'x86',
                     'aarch32': 'arm32',
                     'aarch64': 'arm64',
                     'arm32'  : 'arm32',
                     'arm64'  : 'arm64'}


family          = os.name.lower().strip()
platform_family = family_dict.get(family, 'unknown')

flavor          = platform.system().lower().strip()
platform_flavor = flavor_dict.get(flavor, 'unknown')

# We do not currently keep a dict lookup for kernels
version         = platform.release().lower().strip()

architecture    = platform.processor().lower().strip()
platform_architecture = architecture_dict.get(architecture, 'unknown')


platform_info_ads = platform_info_ads.format(platform_family, 
                                             platform_flavor, 
                                             version, 
                                             platform_architecture,
                                             'gnat',  # Hard-coded brand and
                                             '')      # prefix for now

ads_file = open('platform_info.ads', 'w')
ads_file.write(platform_info_ads)
ads_file.close()

platform_info_h = platform_info_h.format(platform_family.upper(), 
                                         platform_flavor.upper(), 
                                         version, 
                                         platform_architecture.upper())

h_file = open('platform_info.h', 'w')
h_file.write(platform_info_h)
h_file.close()
